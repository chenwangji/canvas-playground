(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{56:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性")]),e("h3",{attrs:{id:"font"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#font","aria-hidden":"true"}},[t._v("#")]),t._v(" font")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("context"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("font "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'[font-style] [font-variant] [font-weight] [font-size/line-height] [font-family]'")]),t._v("\n")])]),e("p",[t._v("5 个参数均可缺省（问：但是缺省了，怎么对应起来？）")]),e("ol",[e("li",[t._v("font-style 定义字体的风格。")])]),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),e("th",[t._v("描述")])])]),e("tbody",[e("tr",[e("td",[t._v("normal")]),e("td",[t._v("默认值。标准样式。")])]),e("tr",[e("td",[t._v("italic")]),e("td",[t._v("倾斜样式")])]),e("tr",[e("td",[t._v("oblique")]),e("td",[t._v("倾斜样式")])])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("font-variant 设置小型大写字母的字体显示文本")])]),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),e("th",[t._v("描述")])])]),e("tbody",[e("tr",[e("td",[t._v("normal")]),e("td",[t._v("默认值。标准显示。")])]),e("tr",[e("td",[t._v("small-caps")]),e("td",[t._v("显示小型大写字母")])])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("font-weight 文本是否加粗")])]),e("p",[t._v("属性与 css 文本加粗属性一致。\n4. line-height 设置行高\n5. font-family 指定字体")]),e("p",[t._v("通常设置文字 "),e("code",[t._v("font")]),t._v(" 属性只设置 "),e("code",[t._v("font-size")]),t._v(" 和 "),e("code",[t._v("font-family")]),t._v(" 两个值。")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("context"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("font "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'50px serif'")]),t._v("\n")])]),e("h3",{attrs:{id:"textalign"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#textalign","aria-hidden":"true"}},[t._v("#")]),t._v(" textAlign")]),e("p",[t._v("水平对齐。")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("context"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textAlign "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'start | end | left | center | right'")]),t._v("\n")])]),e("p",[t._v("值所对应意义如下：")]),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),e("th",[t._v("意义")])])]),e("tbody",[e("tr",[e("td",[t._v("start")]),e("td",[t._v("默认。文本从指定的位置开始。")])]),e("tr",[e("td",[t._v("end")]),e("td",[t._v("文本从指定的位置结束。")])]),e("tr",[e("td",[t._v("left")]),e("td",[t._v("文本左对齐。")])]),e("tr",[e("td",[t._v("center")]),e("td",[t._v("文本中心对齐。")])]),e("tr",[e("td",[t._v("right")]),e("td",[t._v("文本右对齐。")])])])]),e("h3",{attrs:{id:"textbaseline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#textbaseline","aria-hidden":"true"}},[t._v("#")]),t._v(" textBaseline")]),e("p",[t._v("垂直对齐。")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("context"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textAlgn "),e("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'alphabetic | top | hanging | middle | ideographic | bottom'")]),t._v("\n")])]),e("p",[t._v("各值及意义：")]),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),e("th",[t._v("意义")])])]),e("tbody",[e("tr",[e("td",[t._v("alphabetic")]),e("td",[t._v("默认。文本基线是普通的字母基线。")])]),e("tr",[e("td",[t._v("top")]),e("td",[t._v("文本基线是 em 方框的顶端。")])]),e("tr",[e("td",[t._v("hanging")]),e("td",[t._v("文本基线是悬挂基线。")])]),e("tr",[e("td",[t._v("middle")]),e("td",[t._v("文本基线是 em 方框的正中。")])]),e("tr",[e("td",[t._v("ideographic")]),e("td",[t._v("文本基线是表意基线。")])]),e("tr",[e("td",[t._v("bottom")]),e("td",[t._v("文本基线是 em 方框的底端。")])])])]),e("p",[t._v("各基线的位置：")]),e("p",[e("img",{attrs:{src:"http://7xkcl8.com1.z0.glb.clouddn.com/edu18-2.gif",alt:"基线"}})]),e("h2",{attrs:{id:"方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),e("h3",{attrs:{id:"filltext-string-x-y-maxlen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filltext-string-x-y-maxlen","aria-hidden":"true"}},[t._v("#")]),t._v(" fillText(String, x, y, [maxlen])")]),e("p",[t._v("在画布上绘制“被填充的”文本。")]),e("p",[t._v("参数的意义：")]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("意义")])])]),e("tbody",[e("tr",[e("td",[t._v("String")]),e("td",[t._v("要绘制的文字")])]),e("tr",[e("td",[t._v("x")]),e("td",[t._v("横坐标")])]),e("tr",[e("td",[t._v("y")]),e("td",[t._v("纵坐标")])]),e("tr",[e("td",[t._v("maxlen")]),e("td",[t._v("显示的最大宽度，超出会压缩文字")])])])]),e("h3",{attrs:{id:"stroketext-string-x-y-maxlen"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stroketext-string-x-y-maxlen","aria-hidden":"true"}},[t._v("#")]),t._v(" strokeText(String, x, y, [maxlen])")]),e("p",[t._v("在画布上绘制文本（无填充）。\n参数意义与 "),e("code",[t._v("fillText()")]),t._v(" 一样。")]),e("h3",{attrs:{id:"measuretext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#measuretext","aria-hidden":"true"}},[t._v("#")]),t._v(" measureText()")]),e("p",[t._v("返回包含指定文本宽度的对象。")]),e("p",[t._v("Canvas 只支持单行显示。\n用这个 api 可以实现换行显示（TODO: 具体怎么实现呢？）。")]),e("p",[t._v("返回文本宽度：")]),e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("context"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("measureText")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width\n")])])])}],!1,null,null,null);a.default=r.exports}}]);