(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{61:function(e,t,a){"use strict";a.r(t);var s=a(0),c=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"clip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clip","aria-hidden":"true"}},[e._v("#")]),e._v(" clip()")]),a("p",[e._v("裁剪区域。")]),a("p",[e._v("Canvas API的图像裁剪功能是指，在画布内使用路径，只绘制该路径内所包含区域的图像，不会只路径外的图像。这有点像Flash中的图层遮罩。")]),a("p",[e._v("使用图形上下文的不带参数的 "),a("code",[e._v("clip()")]),e._v(" 方法来实现 Canvas 的图像裁剪功能。该方法使用路径来对  Canvas话 不设置一个裁剪区域。因此，必须先创建好路径。创建完整后，调用 "),a("code",[e._v("clip()")]),e._v(" 方法来设置裁剪区域。")]),a("p",[e._v("需要注意的是裁剪是对画布进行的，裁切后的画布不能恢复到原来的大小，也就是说画布是越切越小的，要想保证最后仍然能在 canvas 最初定义的大小下绘图需要注意 "),a("code",[e._v("save()")]),e._v(" 和 "),a("code",[e._v("restore()")]),e._v("。画布是先裁切完了再进行绘图。并不一定非要是图片，路径也可以放进去。")])])}],!1,null,null,null);t.default=c.exports}}]);